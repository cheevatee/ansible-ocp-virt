---
- name: Add network interface(s) to a KubeVirt VM and migrate after completion
  hosts: localhost
  gather_facts: false
  vars:
    name: test01            # VM name
    namespace: vms          # VM namespace
    net_attach_def: "[]"  # Could be "", a single def, or a Python-list string

  tasks:
    - name: Parse network attachments into a list
      ansible.builtin.set_fact:
        attach_list: >-
          {% set val = net_attach_def | trim %}
          {% if val == '' or val == '[]' %}
          []
          {% elif val[0] == '[' and val[-1] == ']' %}
          {{ val | from_yaml }}
          {% else %}
          ["{{ val }}"]
          {% endif %}

    - name: End play if no network attachments defined
      meta: end_play
      when: attach_list | length == 0

    - name: Derive interface names
      ansible.builtin.set_fact:
        interface_names: "{{ attach_list | map('split','/') | map('last') | list }}"
      when: attach_list | length > 0

    - name: Add network interfaces
      kubernetes.core.k8s:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        name: "{{ name }}"
        namespace: "{{ namespace }}"
        merge_type:
          - strategic-merge
        definition:
          spec:
            template:
              spec:
                domain:
                  devices:
                    interfaces:
                      - name: "{{ item.1 }}"
                        bridge: {}
                        model: virtio
                networks:
                  - name: "{{ item.1 }}"
                    multus:
                      networkName: "{{ item.0 }}"
      loop: "{{ attach_list | zip(interface_names) | list }}"
      loop_control:
        label: "{{ item.1 }}"
      register: patch_results
      when: attach_list | length > 0

    - name: Show patch results
      ansible.builtin.debug:
        var: patch_results
      when: patch_results is defined and patch_results is not skipped

    - name: Migrate VM after interfaces added
      kubernetes.core.k8s:
        api_version: kubevirt.io/v1
        kind: VirtualMachineInstanceMigration
        state: present
        namespace: "{{ namespace }}"
        definition:
          metadata:
            name: "{{ name }}-migration"
          spec:
            vmiName: "{{ name }}"
      when: patch_results is defined and patch_results.changed
      register: migration_result

    - name: Show migration result
      ansible.builtin.debug:
        var: migration_result
      when: migration_result is defined
