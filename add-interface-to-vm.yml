---
- name: Add network interface(s) to a KubeVirt VM and migrate after completion
  hosts: localhost
  gather_facts: false
  vars:
    name: test01            # VM name
    namespace: vms          # VM namespace
    net_attach_def: "[]"  # Could be "", a single def, or a Python-list string

  tasks:
    - block:
        - name: No attachments defined, create VM only
          ansible.builtin.debug:
            msg: "Create VM completed"
        - name: Exit play when no attachments
          meta: end_play
      when: net_attach_def == '' or net_attach_def == '[]'

    - name: Print original net_attach_def
      ansible.builtin.debug:
        var: net_attach_def

    - name: Normalize attach_list to comma-separated string
      ansible.builtin.set_fact:
        attach_list_str: "{{ (net_attach_def is sequence) and (net_attach_def | join(',')) or ((net_attach_def|string) | trim('[] ')) }}"

    - name: Print normalized attach_list_str
      ansible.builtin.debug:
        var: attach_list_str

    - name: Turn attach_list_str into list
      ansible.builtin.set_fact:
        attach_list_list: "{{ attach_list_str.split(',') }}"

    - name: Print attach_list_list
      ansible.builtin.debug:
        var: attach_list_list

    - name: Derive interface names
      ansible.builtin.set_fact:
        interface_names: "{{ attach_list_list | map('split','/') | map('last') | list }}"

    - name: Print interface_names
      ansible.builtin.debug:
        var: interface_names

    - name: Add network interfaces
      kubernetes.core.k8s:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        name: "{{ name }}"
        namespace: "{{ namespace }}"
        merge_type:
          - strategic-merge
        definition:
          spec:
            template:
              spec:
                domain:
                  devices:
                    interfaces:
                      - name: "{{ item.1 }}"
                        bridge: {}
                        model: virtio
                networks:
                  - name: "{{ item.1 }}"
                    multus:
                      networkName: "{{ item.0 }}"
      loop: "{{ attach_list_list | zip(interface_names) | list }}"
      loop_control:
        label: "{{ item.1 }}"
      register: patch_results

    - name: Show patch results
      ansible.builtin.debug:
        var: patch_results

    - name: Migrate VM after interfaces added
      kubernetes.core.k8s:
        api_version: kubevirt.io/v1
        kind: VirtualMachineInstanceMigration
        state: present
        namespace: "{{ namespace }}"
        definition:
          metadata:
            name: "{{ name }}-migration"
          spec:
            vmiName: "{{ name }}"
      when: patch_results.changed
      register: migration_result

    - name: Show migration result
      ansible.builtin.debug:
        var: migration_result
      when: migration_result is defined
